id: tutorial_01_first_steps
title: "First Steps: Welcome to PowerShell"
description: "Take your first steps with PowerShell! This beginner-friendly tutorial introduces you to the command-line interface, teaches you how to run basic commands, and helps you understand how PowerShell works."
difficulty: beginner
estimatedTime: 15
xpTotal: 150
topics:
  - powershell
  - basics
  - commands
steps:
  - id: welcome
    title: "Meet Your Terminal"
    instructions: "Welcome to PowerShell! ðŸ‘‹ You're looking at the PowerShell terminal window - a powerful text-based interface for controlling your computer. Unlike clicking on icons, here you'll type commands to tell your computer what to do. Don't worry if it seems intimidating at first - we'll start with the basics. Try typing your name and pressing Enter to see what happens."
    expectedCommand: ""
    hint: "Just type anything and press Enter to continue. There's no 'correct' answer for this step."
    validation:
      type: any
    xp: 5
    animation: typing
    ascii_art: |
      +-------------------------+
      |  PowerShell Terminal    |
      |                         |
      |  PS> _                  |
      |                         |
      +-------------------------+

  - id: first_try
    title: "Your First Command"
    instructions: "Great! PowerShell tried to run what you typed as a command. Let's try a real PowerShell command now. Type `Get-Date` and press Enter to see the current date and time."
    expectedCommand: "Get-Date"
    hint: "Type `Get-Date` exactly as shown (capital G and D) and press Enter."
    validation:
      type: exact
      caseSensitive: false
    xp: 10
    animation: typing

  - id: understand_commands
    title: "Understanding Commands"
    instructions: "Perfect! The `Get-Date` command displays the current date and time. PowerShell commands follow a 'Verb-Noun' pattern (like Get-Date, where 'Get' is the action and 'Date' is what you're acting on). Let's try another command. Type `Get-Location` to see your current location in the file system."
    expectedCommand: "Get-Location"
    hint: "Type `Get-Location` with capital G and L, then press Enter. This shows your current directory."
    validation:
      type: exact
      caseSensitive: false
    xp: 15
    animation: typing

  - id: command_alias
    title: "Command Shortcuts"
    instructions: "Well done! `Get-Location` shows your current directory. Many PowerShell commands have shorter aliases to save typing. For example, `Get-Location` can be shortened to just `pwd`. Try typing `pwd` now to achieve the same result."
    expectedCommand: "pwd"
    hint: "Type the three letters `pwd` and press Enter. This is a shorter way to use the Get-Location command."
    validation:
      type: exact
      caseSensitive: false
    xp: 20
    animation: typing

  - id: getting_help
    title: "Getting Help"
    instructions: "PowerShell has hundreds of commands, and you don't need to memorize them all! You can get help on any command using `Get-Help`. Let's try it - type `Get-Help Get-Date` to see information about the Get-Date command."
    expectedCommand: "Get-Help Get-Date"
    hint: "Type `Get-Help Get-Date` exactly as shown to display help information."
    validation:
      type: exact
      caseSensitive: false
    xp: 25
    animation: typing

  - id: finding_commands
    title: "Finding Commands"
    instructions: "Great! You can use `Get-Help` anytime you need to learn about a command. But how do you discover commands in the first place? Type `Get-Command -Noun Process` to find all commands that work with processes."
    expectedCommand: "Get-Command -Noun Process"
    hint: "Type `Get-Command -Noun Process` to find all commands that have 'Process' as their noun."
    validation:
      type: exact
      caseSensitive: false
    xp: 30
    animation: typing

  - id: simple_calculation
    title: "Using PowerShell as a Calculator"
    instructions: "PowerShell can also perform calculations directly. Try a simple math operation by typing `2 + 2` and pressing Enter."
    expectedCommand: "2 + 2"
    hint: "Type `2 + 2` and press Enter. PowerShell will calculate and display the result."
    validation:
      type: exact
    xp: 15
    animation: typing

  - id: advanced_calculation
    title: "More Complex Math"
    instructions: "PowerShell supports all standard math operations. Let's try a more complex calculation. Type `(10 * 5) / 2` to multiply 10 by 5, then divide the result by 2."
    expectedCommand: "(10 * 5) / 2"
    hint: "Type `(10 * 5) / 2` exactly as shown, with the parentheses to ensure multiplication happens before division."
    validation:
      type: exact
    xp: 20
    animation: typing
    ascii_art: |
      +----------------+
      |     25.0       |
      |   RESULT!      |
      +----------------+

  - id: conclusion
    title: "Congratulations!"
    instructions: "ðŸŽ‰ Congratulations! You've completed your first PowerShell tutorial! You've learned how to run commands, get help, find commands, and even do calculations. These fundamentals will serve as your foundation as you explore more advanced PowerShell techniques. Type `Write-Host \"I did it!\"` to celebrate your achievement!"
    expectedCommand: "Write-Host \"I did it!\""
    hint: "Type `Write-Host \"I did it!\"` including the quotes around the text."
    validation:
      type: exact
      caseSensitive: false
    xp: 30
    animation: typing
    ascii_art: |
      .-------------------.
      |  .-----------.-. |
      |  |  PowerSh  | | |
      |  |   ell     | | |
      |  |           | | |
      |  | COMPLETED!| | |
      |  `-----------'| |
      `-------------------'